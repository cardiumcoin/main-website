{"id":"app.html","dependencies":[{"name":"./img\\logo.png","dynamic":true,"resolved":"C:\\Users\\note\\Desktop\\cardium\\main\\public\\img\\logo.png","parent":"C:\\Users\\note\\Desktop\\cardium\\main\\public\\app.html"},{"name":"./img\\axioaiimage.png","dynamic":true,"resolved":"C:\\Users\\note\\Desktop\\cardium\\main\\public\\img\\axioaiimage.png","parent":"C:\\Users\\note\\Desktop\\cardium\\main\\public\\app.html"},{"name":"./index.html","dynamic":true,"resolved":"C:\\Users\\note\\Desktop\\cardium\\main\\public\\index.html","entry":true,"parent":"C:\\Users\\note\\Desktop\\cardium\\main\\public\\app.html"},{"name":"./app.html","dynamic":true,"resolved":"C:\\Users\\note\\Desktop\\cardium\\main\\public\\app.html","entry":true,"parent":"C:\\Users\\note\\Desktop\\cardium\\main\\public\\app.html"},{"name":"./img\\download.png","dynamic":true,"resolved":"C:\\Users\\note\\Desktop\\cardium\\main\\public\\img\\download.png","parent":"C:\\Users\\note\\Desktop\\cardium\\main\\public\\app.html"},{"name":"./style\\font\\FormulaCondensed-Light.woff","dynamic":true,"resolved":"C:\\Users\\note\\Desktop\\cardium\\main\\public\\style\\font\\FormulaCondensed-Light.woff","loc":{"line":8,"column":5},"parent":"C:\\Users\\note\\Desktop\\cardium\\main\\public\\app.html"},{"name":"./style\\font\\FormulaCondensed-Bold.woff","dynamic":true,"resolved":"C:\\Users\\note\\Desktop\\cardium\\main\\public\\style\\font\\FormulaCondensed-Bold.woff","loc":{"line":16,"column":5},"parent":"C:\\Users\\note\\Desktop\\cardium\\main\\public\\app.html"},{"name":"_css_loader","parent":"C:\\Users\\note\\Desktop\\cardium\\main\\public\\app.html","resolved":"C:\\Users\\note\\AppData\\Roaming\\npm\\node_modules\\parcel-bundler\\src\\builtins\\css-loader.js"},{"name":"C:\\Users\\note\\Desktop\\cardium\\main\\public\\package.json","includedInParent":true,"mtime":1729412978659}],"generated":{"html":"<!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    <title>AxioGPT & AxioDRAW</title>\r\n    <link rel=\"shortcut icon\" href=\"/bc73d7effd7675f355ff736ececc779a.png\" type=\"image/x-icon\">\r\n    <link rel=\"apple-touch-icon\" href=\"/bc73d7effd7675f355ff736ececc779a.png\">\r\n\r\n    <style>@import url('https://fonts.googleapis.com/css2?family=Fira+Code:wght@300..700&family=Rajdhani:wght@300;400;500;600;700&display=swap');\r\n@import url('https://fonts.googleapis.com/css2?family=Fira+Code:wght@300..700&display=swap');\r\n@import url('https://fonts.googleapis.com/css2?family=Karla&display=swap');\r\n@font-face {\r\n    font-family: 'Formula Condensed';\r\n    font-style: normal;\r\n    font-weight: normal;\r\n    src: local('Formula Condensed Light'), url('/84256492d66a646154775ed1a60dde53.woff') format('woff');\r\n    }\r\n    \r\n\r\n@font-face {\r\n    font-family: 'Formula Condensed Bold';\r\n    font-style: normal;\r\n    font-weight: normal;\r\n    src: local('Formula Condensed Bold'), url('/bd6a5b97a36beeb566e4497049687d96.woff') format('woff');\r\n}\r\na{\r\n    text-decoration: none;\r\n}\r\n\r\n:root{\r\n    --background-color-nav:#000;\r\n}\r\nhtml{\r\n    background-color: var(--background-color-nav) !important;\r\n}\r\n\r\n*, *::before, ::after {\r\n    border: none;\r\n    border-color: #E2E8F0;\r\n    font-family: \"Fira Code\", Sans-serif;\r\n}\r\n:where(*, *::before, *::after) {\r\n    border-width: 0;\r\n    border-style: solid;\r\n    box-sizing: border-box;\r\n    word-wrap: break-word;\r\n}\r\ntextarea:focus, input:focus, select:focus {\r\n    box-shadow: 0 0 0 0;\r\n    border: 0 none;\r\n    outline: 0;\r\n} \r\nhtml, body{\r\n    min-height: 100%;\r\n    width: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    flex-wrap: nowrap;\r\n    align-items: stretch;\r\n    justify-content: flex-start;\r\n    padding: 0px;\r\n    margin: 0px !important;\r\n    background: var(--background-main-color);\r\n    height: 100%;\r\n}\r\n\r\n#initial{\r\n    display: none;\r\n    flex-direction: row;\r\n    flex-wrap: nowrap;\r\n    align-items: stretch;\r\n    justify-content: center;\r\n    height: 100%;\r\n    width: 100%;\r\n    position: relative;\r\n}\r\n\r\n#initial p#pt{\r\n    position: fixed;\r\n    bottom: 10%;\r\n    width: 100%;\r\n    text-align: center;\r\n    color: white;\r\n    padding: 0px 20px;\r\n}\r\n\r\n#initial button{\r\n    flex: 1;\r\n    width: 50%;\r\n    height: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    flex-wrap: nowrap;\r\n    align-content: center;\r\n    justify-content: center;\r\n    align-items: center;\r\n    background-color: #000;\r\n}\r\n\r\n#initial button:nth-child(2){\r\n    background-color: #333;\r\n}\r\n\r\n#initial button img{\r\n    width: 80%;\r\n}\r\n\r\n#initial button:nth-child(2) img{\r\n    filter: invert(1);\r\n    z-index: 1;\r\n}\r\n\r\n\r\n#initial button:nth-child(2) img:nth-child(2){\r\n    width: 20%;\r\n    position: absolute;\r\n    bottom: 50px;\r\n    right: 20%;\r\n    z-index: 10;\r\n}\r\n\r\n#initial button div{\r\n    position: relative;\r\n    display: flex;\r\n    flex-direction: row;\r\n    flex-wrap: nowrap;\r\n    align-content: center;\r\n    justify-content: center;\r\n    align-items: center;\r\n}\r\n#initial button p{\r\n    color: white;\r\n    font-size: 32px;\r\n    margin-top: -20px;\r\n}\r\n\r\n#root,#gpt,#draw{\r\n    display: none;\r\n    background-color: var(--background-color-nav);\r\n    height: 100%;\r\n    width: 100%;\r\n}\r\n\r\n#draw, #gpt{\r\n    flex-direction: column;\r\n    flex-wrap: nowrap;\r\n    align-items: stretch;\r\n    justify-content: flex-start;\r\n    width: 100%;\r\n    max-width: 700px;\r\n    margin: auto;\r\n    height: 100%;\r\n    flex: 1;\r\n    color: white;\r\n    padding: 20px;\r\n    padding-top: 40px;\r\n}\r\n\r\n#gpt #content{\r\n    display: flex;\r\n    flex-direction: column;\r\n    flex-wrap: nowrap;\r\n    align-items: stretch;\r\n    justify-content: flex-start;\r\n    padding: 20px;\r\n    width: 100%;\r\n    max-height: 500px;\r\n    overflow-y: scroll;\r\n    /* flex: 1; */\r\n}\r\n\r\n#gpt #inpput{\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: stretch;\r\n    justify-content: center;\r\n}\r\n\r\n#gpt #inpput input{\r\n    flex: 1;\r\n    border: 1px solid #fff;\r\n    border-radius: 10px;\r\n    background: #fff0;\r\n    padding: 12px 10px;\r\n    margin-right: 10px;\r\n    color: white;\r\n    font-size: 15px;\r\n}\r\n\r\n#gpt #inpput button{\r\n    width: max-content;\r\n    height: 42px;\r\n    background: white;\r\n    color: #000;\r\n    border-radius: 10px;\r\n    border: 1px solid white;\r\n    padding: 0px 12px;\r\n}\r\n\r\n#gpt #contetn #va{\r\n    display: flex;\r\n    flex-direction: row;\r\n    flex-wrap: nowrap;\r\n    justify-content: flex-start;\r\n    align-items: stretch;\r\n    align-content: flex-start;\r\n    padding-bottom: 20px;\r\n}\r\n#gpt #contetn #va img{\r\n    filter: invert(1);\r\n    width: 60px;\r\n    height: 60px;\r\n}\r\n\r\n#gpt #contetn #war img{\r\n    filter: invert(1);\r\n    width: 80px;\r\n    height: 80px;\r\n}\r\n\r\n#gpt #contetn #va img#userrr{\r\n    filter: invert(0);\r\n    width: 60px;\r\n    height: 60px;\r\n    padding: 18px;\r\n}\r\n\r\n#gpt #contetn{\r\n    display: flex;\r\n    flex-direction: column;\r\n    flex-wrap: nowrap;\r\n    align-items: stretch;\r\n    justify-content: flex-start;\r\n    padding: 20px 0px;\r\n    flex: 1;\r\n}\r\n\r\n#gpt #contetn #war{\r\n    display: flex;\r\n    flex-direction: column;\r\n    flex-wrap: nowrap;\r\n    align-content: center;\r\n    align-items: center;\r\n    justify-content: center;\r\n    padding: 70px 0px;\r\n}\r\n\r\n\r\n#draw p, #draw span{\r\n    text-align: center;\r\n}\r\n\r\n\r\n#draw p{\r\n    font-size: 26px;\r\n}\r\n\r\n#draw input, #draw div:nth-child(3) button{\r\n    color: #fff;\r\n    background-color: #000;\r\n    width: 100%;\r\n    font-size: 15px;\r\n    padding: 12px 16px;\r\n    border: 1px solid #fff;\r\n    border-radius: 10px;\r\n    margin-top: 10px;\r\n}\r\n\r\n#draw div:nth-child(3){\r\n    display: flex;\r\n    flex-direction: row;\r\n    flex-wrap: nowrap;\r\n    align-items: stretch;\r\n    justify-content: center;\r\n}\r\n\r\n#draw div:nth-child(3) button{\r\n    flex: 0;\r\n    margin-left: 10px;\r\n}\r\n\r\n#draw div:nth-child(3) button:hover{\r\n    color: #000;\r\n    background-color: white;\r\n}\r\n\r\n#root{\r\n    flex-direction: column;\r\n    flex-wrap: nowrap;\r\n    align-items: stretch;\r\n    justify-content: flex-start;\r\n}\r\n\r\n#root nav{\r\n    display: flex;\r\n    flex-direction: row;\r\n    flex-wrap: nowrap;\r\n    align-items: stretch;\r\n    justify-content: space-between;\r\n    width: 100%;\r\n}\r\n\r\n#root nav img{\r\n    width: 60px;\r\n    height: 60px;\r\n    filter: invert(1);\r\n}\r\n\r\n#generatedImage{\r\n    width: 100%;\r\n    background-color: white;\r\n    margin-top: 20px;\r\n}\r\n\r\n#generatedImage img{\r\n    width: 100%;\r\n    height: 100%;\r\n    display: none;\r\n}\r\n\r\n#loadingImg{\r\n    margin-top: 20px;\r\n    display: none;\r\n    width: 100%;\r\n    height: 100px;\r\n    animation: colorChange 3s infinite;\r\n}\r\n\r\n@keyframes colorChange {\r\n    0% {\r\n      background-color: black;\r\n    }\r\n    33% {\r\n      background-color: gray;\r\n    }\r\n    66% {\r\n      background-color: white;\r\n    }\r\n    100% {\r\n      background-color: black;\r\n    }\r\n  }\r\n\r\n#root nav a{\r\n    display: flex;\r\n    flex-direction: row;\r\n    flex-wrap: nowrap;\r\n    align-content: center;\r\n    justify-content: center;\r\n    align-items: center;\r\n    color: #fff;\r\n    font-size: 16px;\r\n    margin-right: 20px;    \r\n    font-family: \"Rajdhani\",sans-serif;\r\n    font-weight: 200;\r\n    line-height: 4rem;\r\n    letter-spacing: .06em;\r\n    border: none;\r\n    padding: 0px;\r\n}\r\n\r\n#root nav a:not([href=\"./index.html\"]):hover {\r\n    border-bottom: 1px solid #fff;\r\n}\r\n\r\n#root nav div{\r\n    display: flex;\r\n    flex-direction: row;\r\n    flex-wrap: nowrap;\r\n    align-items: center;\r\n    width: 100%;\r\n    flex: 1;\r\n    justify-content: flex-end;\r\n}\r\n\r\n\r\n#root nav a[href=\"./index.html\"]{\r\n    font-size: 18px;\r\n}\r\n\r\n#root nav a[href=\"./app.html\"]{\r\n    border: 1px solid #f69f33;\r\n    border-radius: 10px;\r\n    min-width: 85px;\r\n}\r\n\r\n@media screen and (max-width: 600px){\r\n    #root nav{\r\n        flex-direction: column;\r\n        flex-wrap: nowrap;\r\n        align-items: stretch;\r\n        justify-content: space-between;\r\n        width: 100%;\r\n    }\r\n\r\n    #root nav a[href=\"./index.html\"]{\r\n        flex-direction: row;\r\n        flex-wrap: nowrap;\r\n        justify-content: flex-start;\r\n    }\r\n    #root nav div{\r\n        flex-wrap: wrap;\r\n    }\r\n    #root nav a{\r\n        flex: 1;\r\n    }\r\n\r\n    #root nav a[href=\"./app.html\"]{\r\n        width: 100%;\r\n\r\n    }\r\n}\r\n\r\n\r\n@media screen and (max-width:580px) {\r\n    #initial{\r\n        flex-flow: row;\r\n        align-items: stretch;\r\n        justify-content: center;\r\n        height: 100%;\r\n        width: 100%;\r\n        position: relative;\r\n        flex-direction: column;\r\n    }\r\n    #initial button{\r\n        width: 100%;\r\n    }\r\n    #initial p#pt{\r\n        position: fixed;\r\n        bottom: 45%;\r\n        width: 100%;\r\n        text-align: center;\r\n        color: white;\r\n    }\r\n    #initial button p{\r\n        font-size: 26px;\r\n    }\r\n}</style>\r\n\r\n    <script src=\"//cdn.jsdelivr.net/npm/sweetalert2@11\"></script>\r\n    <script src=\"https://code.jquery.com/jquery-3.7.1.js\" integrity=\"sha256-eKhayi8LEQwp4NKxN+CfCh+3qOVUtJn3QNZ0TciWLP4=\" crossorigin=\"anonymous\"></script>\r\n</head>\r\n<body>\r\n    \r\n    <div id=\"initial\">\r\n        <button onclick=\"toD('gpt')\" onselect=\"toD('gpt')\">\r\n            <div>\r\n                <img src=\"/bc73d7effd7675f355ff736ececc779a.png\" alt=\"\">\r\n            </div>\r\n            <p>AxioGPT</p>\r\n        </button>\r\n        <button onclick=\"toD('draw')\" onselect=\"toD('draw')\">\r\n            <div>\r\n                <img src=\"/bc73d7effd7675f355ff736ececc779a.png\" alt=\"\">\r\n                <img src=\"/8b6c3482d5b984a9f339075d6ce9b3ad.png\" alt=\"\">\r\n            </div>\r\n            <p>AxioDRAW</p>\r\n        </button>\r\n        <p id=\"pt\">Select which of the two services you want to use.</p>\r\n    </div>\r\n\r\n\r\n    <div id=\"root\">\r\n\r\n        <nav>\r\n            <a href=\"/eacf331f0ffc35d4b482f1d15a887d3b.html\">\r\n                <img src=\"/bc73d7effd7675f355ff736ececc779a.png\" alt=\"\">\r\n                <span>AxioAi</span>\r\n            </a>\r\n\r\n            <div>\r\n                <a href=\"/5dd562ffdcfe83ac0e37874acee45e89.html#gpt\">AxioGPT</a>\r\n                <a href=\"/5dd562ffdcfe83ac0e37874acee45e89.html#draw\">AxioDRAW</a>\r\n                <a href=\"https://discord.gg/axioai\">Discord</a>\r\n                <a href=\"https://t.me/axioai\">Telegram</a>\r\n            </div>\r\n        </nav>\r\n\r\n        <div id=\"draw\">\r\n            <p>AxioDRAW</p>\r\n            <span>Write below the description of the image you want to generate with AI for AxioDRAW</span>\r\n            <div>\r\n                <input id=\"valueInputDraw\" type=\"text\">\r\n                <button onclick=\"generateDRAWAI()\" onselect=\"generateDRAWAI()\">Generate</button>\r\n            </div>\r\n            <div id=\"generatedImage\">\r\n                <img src=\"\" alt=\"\">\r\n            </div>\r\n            <div id=\"loadingImg\">\r\n\r\n            </div>\r\n        </div>\r\n\r\n        <div id=\"gpt\">\r\n            <div id=\"contetn\">\r\n                <div id=\"war\">\r\n                    <img src=\"/bc73d7effd7675f355ff736ececc779a.png\" alt=\"\">\r\n                    <p>How can I help you today?</p>\r\n                </div>\r\n            </div>\r\n\r\n            <div id=\"inpput\">\r\n                <input type=\"text\" id=\"gptInput\" placeholder=\"1+1=?\">\r\n                <button onclick=\"sendGPT()\" onselect=\"sendGPT()\">Send</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <img id=\"userImage\" src=\"/97bda780cff1ca1dd5ae4586142aca94.png\" alt=\"\" style=\"display: none;z-index: -9999;\">\r\n\r\n    <script defer=\"\">function _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = \"function\" == typeof Symbol ? Symbol : {}, a = i.iterator || \"@@iterator\", c = i.asyncIterator || \"@@asyncIterator\", u = i.toStringTag || \"@@toStringTag\"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, \"\"); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, \"_invoke\", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: \"normal\", arg: t.call(e, r) }; } catch (t) { return { type: \"throw\", arg: t }; } } e.wrap = wrap; var h = \"suspendedStart\", l = \"suspendedYield\", f = \"executing\", s = \"completed\", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { [\"next\", \"throw\", \"return\"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if (\"throw\" !== c.type) { var u = c.arg, h = u.value; return h && \"object\" == _typeof(h) && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) { invoke(\"next\", t, i, a); }, function (t) { invoke(\"throw\", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke(\"throw\", t, i, a); }); } a(c.arg); } var r; o(this, \"_invoke\", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw Error(\"Generator is already running\"); if (o === s) { if (\"throw\" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else \"return\" === n.method && n.abrupt(\"return\", n.arg); o = f; var p = tryCatch(e, r, n); if (\"normal\" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, \"throw\" === n && e.iterator.return && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y; var i = tryCatch(o, e.iterator, r.arg); if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = \"normal\", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: \"root\" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || \"\" === e) { var r = e[a]; if (r) return r.call(e); if (\"function\" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + \" is not iterable\"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) { var e = \"function\" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () { return this; }), define(g, \"toString\", function () { return \"[object Generator]\"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if (\"throw\" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if (\"root\" === i.tryLoc) return handle(\"end\"); if (i.tryLoc <= this.prev) { var c = n.call(i, \"catchLoc\"), u = n.call(i, \"finallyLoc\"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw Error(\"try statement without catch or finally\"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) { var i = o; break; } } i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if (\"throw\" === t.type) throw t.arg; return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, catch: function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if (\"throw\" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, \"next\" === this.method && (this.arg = t), y; } }, e; }\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\nvar Toast = Swal.mixin({\n  toast: true,\n  position: 'top-end',\n  showConfirmBuFVtton: false,\n  timer: 3000,\n  timerProgressBar: true,\n  didOpen: function didOpen(toast) {\n    toast.addEventListener('mouseenter', Swal.stopTimer);\n    toast.addEventListener('mouseleave', Swal.resumeTimer);\n  }\n});\n$(window).on(\"load\", function () {\n  setInterval(function () {\n    $(\"#generatedImage\").css(\"height\", $(\"#generatedImage\").width());\n    $(\"#loadingImg\").css(\"height\", $(\"#loadingImg\").width());\n    switch (window.location.hash) {\n      case \"#gpt\":\n        $(\"#root,#draw\").css(\"display\", \"none\");\n        $(\"#root,#gpt\").css(\"display\", \"flex\");\n        $(\"html,body\").css(\"height\", \"max-content\");\n        break;\n      case \"#draw\":\n        $(\"#root,#gpt\").css(\"display\", \"none\");\n        $(\"#root,#draw\").css(\"display\", \"flex\");\n        $(\"html,body\").css(\"height\", \"max-content\");\n        break;\n      default:\n        $(\"#root,#gpt,#draw\").css(\"display\", \"none\");\n        $(\"#initial\").css(\"display\", \"flex\");\n    }\n  }, 500);\n});\nfunction toD(k) {\n  window.location.hash = k;\n  document.location.reload(true);\n}\nfunction generateDRAWAI() {\n  return _generateDRAWAI.apply(this, arguments);\n}\nfunction _generateDRAWAI() {\n  _generateDRAWAI = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n    var i, response, data;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          $(\"#generatedImage\").css(\"display\", \"none\");\n          $(\"#loadingImg\").css(\"display\", \"flex\");\n          i = $(\"#valueInputDraw\").val();\n          if (!(i == \"\")) {\n            _context.next = 7;\n            break;\n          }\n          Toast.fire(\"Fill in all required fields.\", \"\", \"error\");\n          _context.next = 15;\n          break;\n        case 7:\n          _context.next = 9;\n          return fetch(\"https://us-central1-bracefaucet.cloudfunctions.net/generateImage?input=\" + i);\n        case 9:\n          response = _context.sent;\n          _context.next = 12;\n          return response.json();\n        case 12:\n          data = _context.sent;\n          $(\"#loadingImg\").css(\"display\", \"none\");\n          if (!data.error) {\n            $(\"#generatedImage,#generatedImage img\").css(\"display\", \"flex\");\n            $(\"#generatedImage img\").attr(\"src\", data.data);\n          } else {\n            Toast.fire(\"Error to generate image, please try again.\", \"\", \"error\");\n          }\n        case 15:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n  return _generateDRAWAI.apply(this, arguments);\n}\nfunction sendGPT() {\n  return _sendGPT.apply(this, arguments);\n}\nfunction _sendGPT() {\n  _sendGPT = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n    var i, response, data, counter, a;\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          i = $(\"#gptInput\").val();\n          if (!(i == \"\")) {\n            _context2.next = 5;\n            break;\n          }\n          Toast.fire(\"Fill in all required fields.\", \"\", \"error\");\n          _context2.next = 15;\n          break;\n        case 5:\n          $(\"#gpt #contetn\").append(\"<div id='va'><img id=\\\"userrr\\\" src=\\\"\".concat($(\"#userImage\").attr(\"src\"), \"\\\"><div><p>You</p><span>\").concat(i, \"</span></div></div>\"));\n          _context2.next = 8;\n          return fetch(\"https://us-central1-bracefaucet.cloudfunctions.net/generateText?input=\" + i);\n        case 8:\n          response = _context2.sent;\n          _context2.next = 11;\n          return response.json();\n        case 11:\n          data = _context2.sent;\n          counter = 0;\n          a = setInterval(function () {\n            counter++;\n            var dots = \"\";\n            for (var i = 0; i < counter % 4; i++) {\n              dots += \".\";\n            }\n            $(\"#inpput button\").text(dots);\n            if (counter === 4) {\n              counter = 0;\n            }\n          }, 300);\n          if (!data.error) {\n            clearInterval(a);\n            $(\"#inpput button\").text(\"Send\");\n            $(\"#gpt #contetn\").append(\"<div id='va'><img src=\\\"\".concat($(\"#war img\").attr(\"src\"), \"\\\"><div><p>AxioAI</p><span>\").concat(data.data, \"</span></div></div>\"));\n            console.log(data);\n          } else {\n            Toast.fire(\"Error to generate image, please try again.\", \"\", \"error\");\n          }\n        case 15:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, _callee2);\n  }));\n  return _sendGPT.apply(this, arguments);\n}</script>\r\n</body>\r\n</html>"},"sourceMaps":null,"error":null,"hash":"29bc48b69e9476363dabd0136f025194","cacheData":{"env":{}}}